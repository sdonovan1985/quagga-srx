--- patricia.c.org	2009-04-19 00:28:15.000000000 -0400
+++ patricia.c	2010-05-13 11:58:32.000000000 -0400
@@ -61,6 +61,7 @@
     return (0);
 }
 
+#if USE_CUSTOM_INET
 /* inet_pton substitute implementation
  * Uses inet_addr to convert an IP address in dotted decimal notation into 
  * unsigned long and copies the result to dst.
@@ -97,6 +98,7 @@
     }
 #endif /* NT */
 }
+#endif // !USE_CUSTOM_INET
 
 /* this allows imcomplete prefix */
 int
@@ -226,7 +228,7 @@
     if (family == AF_INET6) {
         default_bitlen = 128;
 	if (prefix == NULL) {
-            prefix = calloc(1, sizeof (prefix6_t));
+            prefix = calloc(1, sizeof (prefix_t));
 	    dynamic_allocated++;
 	}
 	memcpy (&prefix->add.sin6, dest, 16);
@@ -236,7 +238,7 @@
     if (family == AF_INET) {
 		if (prefix == NULL) {
 #ifndef NT
-            prefix = calloc(1, sizeof (prefix4_t));
+            prefix = calloc(1, sizeof (prefix_t));
 #else
 			//for some reason, compiler is getting
 			//prefix4_t size incorrect on NT
@@ -344,7 +346,7 @@
 {
     if (prefix == NULL)
 	return (NULL);
-    if (prefix->ref_count == 0) {
+    if (prefix->ref_count == -1) {
 	/* make a copy in case of a static prefix */
         return (New_Prefix2 (prefix->family, &prefix->add, prefix->bitlen, NULL));
     }
@@ -977,7 +979,7 @@
 }
 
 /* { from demo.c */
-
+#ifdef USE_DEMO_CODE
 patricia_node_t *
 make_and_lookup (patricia_tree_t *tree, char *string)
 {
@@ -1035,4 +1037,5 @@
     Deref_Prefix (prefix);
 }
 
+#endif // !USE_DEMO_CODE
 /* } */
